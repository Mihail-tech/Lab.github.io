{"version":3,"sources":["views/Navbar/style.js","views/Navbar/index.js","views/About/style.js","views/About/index.js","views/MistakeOnClient/style.js","views/MistakeOnClient/index.js","views/Login/style.js","views/Login/index.js","containers/LoginContainer.js","views/LoginRedux/index.js","Redux/Action/index.js","containers/LoginContainerRedux.js","views/SuccessRedux/style.js","views/SuccessRedux/index.js","containers/SuccessReduxContainer.js","views/LoginReduxForm/index.js","containers/LoginContainerReduxForm.js","views/SuccessReduxForm/index.js","containers/LoginReduxFormSuccess.js","views/CounterParent/style.js","views/CounterParent/index.js","views/Counter/styles.js","views/Counter/index.js","containers/CounterContainer.js","containers/CounterContainerParent.js","App.js","reportWebVitals.js","Redux/Reducer/index.js","index.js"],"names":["useStyles","makeStyles","navbar","display","flexDirection","justifyContent","paddingBottom","paddingTop","navLink","textDecoration","active","padding","backgroundColor","borderRadius","Navbar","classes","className","to","activeClassName","Button","variant","color","decorationTitle","background","titleLab","marginLeft","list","point","listStyleType","About","orintation","alignItems","marginTop","fontSize","MistakeOnClient","position","Login","submit","email","emailOutput","password","passwordOutput","onSubmit","fullwidth","name","placeholder","type","onChange","value","required","minLength","fullWidth","JSON","stringify","LoginContainer","useState","state","setState","event","target","preventDefault","console","log","alert","LoginRedux","emailInputChange","passwordInputChange","label","changeEmail","createAction","changePassword","withRouter","connect","appReducer","dispatch","props","history","replace","center","SuccessRedux","LoginReduxForm","handleSubmit","emailValue","passwordValue","Form","Field","component","reduxForm","form","selector","formValueSelector","propTypes","PropTypes","func","string","formData","SuccessReduxForm","decorationList","CounterParent","handleCreateCounter","handleRemoveCounter","handleResetCounters","onClick","decorationCurrentValue","Counter","number","handleIncrement","handleDecrement","handleReset","CounterContainer","count","setNumber","prevCount","useRef","useEffect","current","handleEvenNumber","handleOddNumber","useMemo","CounterContainerParent","setCount","i","push","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","handleActions","action","payload","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be79f239.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  navbar: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    paddingBottom: \"50px\",\r\n    paddingTop: \"20px\",\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n  },\r\n  active: {\r\n    padding: \"5px\",\r\n    backgroundColor: \"red\",\r\n    borderRadius: \"15%\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useStyles from \"./style\";\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.navbar}>\r\n      <NavLink\r\n        to=\"/about\"\r\n        activeClassName={classes.active}\r\n        className={classes.navLink}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          About\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/counter\"\r\n        activeClassName={classes.active}\r\n        className={classes.navLink}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Counter\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        activeClassName={classes.active}\r\n        className={classes.navLink}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login-redux\"\r\n        activeClassName={classes.active}\r\n        className={classes.navLink}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Login-Redux\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login-redux-form\"\r\n        activeClassName={classes.active}\r\n        className={classes.navLink}\r\n      >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Login-Redux-Form\r\n        </Button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  decorationTitle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    background: \"#3333\",\r\n  },\r\n  titleLab: {\r\n    marginLeft: \"40px\",\r\n  },\r\n  list: {\r\n    display: \"flex\",\r\n  },\r\n  point: {\r\n    padding: \"20px\",\r\n    listStyleType: \"none\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport useStyles from \"./style\";\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div>\r\n        <div className={classes.decorationTitle}>\r\n          <h1>Students Lab</h1>\r\n        </div>\r\n        <div className={classes.decorationTitle}>\r\n          <p>\r\n            Бесплатные IT-курсы и стажировки для начинающих. Много практики с\r\n            опытными менторами, удобный график, шанс устроиться на работу в\r\n            iTechArt после обучения.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <span className={classes.titleLab}>Students Lab — это:</span>\r\n          <ul className={classes.list}>\r\n            <li className={classes.point}>Реальный опыт</li>\r\n            <li className={classes.point}>Менторы-профессионалы</li>\r\n            <li className={classes.point}>Баланс теории и практики</li>\r\n            <li className={classes.point}>Онлайн и оффлайн обучение</li>\r\n            <li className={classes.point}>Гибкое расписание занятий</li>\r\n            <li className={classes.point}>Job offer лучшим стажёрам</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  orintation: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: \"10%\",\r\n    fontSize: \"5em\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport useStyles from \"./style\";\r\n\r\nconst MistakeOnClient = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className={classes.orintation}>\r\n        <p>404 – страница не найдена</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MistakeOnClient;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  position: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useStyles from \"./style\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = ({ submit, email, emailOutput, password, passwordOutput }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Formik>\r\n        <Form className={classes.position} onSubmit={submit}>\r\n          <Field\r\n            fullwidth=\"true\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            onChange={email}\r\n            value={emailOutput}\r\n            required\r\n          />\r\n          <Field\r\n            fullwidth=\"true\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            onChange={password}\r\n            value={passwordOutput}\r\n            required\r\n          />\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Sign In\r\n          </Button>\r\n          <div>\r\n            <p>email: {JSON.stringify(emailOutput)}</p>\r\n            <p>pwd: {JSON.stringify(passwordOutput)}</p>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  emailOutput: PropTypes.string,\r\n  passwordOutput: PropTypes.string,\r\n  submit: PropTypes.func,\r\n  email: PropTypes.func,\r\n  password: PropTypes.func\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Login from \"../views/Login\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nconst LoginContainer = () => {\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(`email: ${state.email} password: ${state.password}`);\r\n    setState({ email: \"\", password: \"\" });\r\n    alert(JSON.stringify(state));\r\n  };\r\n\r\n  const onEmailChange = (event) => {\r\n    setState({ email: event.target.value });\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setState({ password: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Login\r\n      email={onEmailChange}\r\n      password={onPasswordChange}\r\n      emailOutput={state.email}\r\n      passwordOutput={state.password}\r\n      submit={onHandleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nLoginContainer.propTypes = {\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n  emailOutput: PropTypes.string,\r\n  passwordOutput: PropTypes.string,\r\n  submit: PropTypes.func,\r\n};\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport useStyles from \"../Login/style\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoginRedux = ({\r\n  onSubmit,\r\n  emailInputChange,\r\n  passwordInputChange,\r\n  emailOutput,\r\n  passwordOutput,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Formik>\r\n        <Form className={classes.position} onSubmit={onSubmit}>\r\n          <Field\r\n            fullwidth=\"true\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={emailInputChange}\r\n            required\r\n          />\r\n          <Field\r\n            fullwidth=\"true\"\r\n            color=\"secondary\"\r\n            minLength=\"6\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={passwordInputChange}\r\n            required\r\n          />\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Sign In\r\n          </Button>\r\n          <div>\r\n            <p>email: {JSON.stringify(emailOutput)}</p>\r\n            <p>pwd: {JSON.stringify(passwordOutput)}</p>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginRedux.propTypes = {\r\n  emailOutput: PropTypes.string,\r\n  passwordOutput: PropTypes.string,\r\n  emailInputChange: PropTypes.func,\r\n  passwordInputChange: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default LoginRedux;\r\n","import { createAction } from \"redux-actions\";\r\n\r\nexport const changeEmail = createAction(\"CHANGE_EMAIL\");\r\nexport const changePassword = createAction(\"CHANGE_PASSWORD\");\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginRedux from \"../views/LoginRedux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { changeEmail, changePassword } from \"../Redux/Action\";\r\n\r\nconst LoginContainerRedux = (props) => {\r\n  const { changePassword, changeEmail } = props;\r\n  \r\n  const handleEmailChange = (event) => {\r\n    changeEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    changePassword(event.target.value);\r\n  };\r\n\r\n  const onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.history.replace(\"/login-redux/success\");\r\n  };\r\n\r\n  return (\r\n    <LoginRedux\r\n      emailInputChange={handleEmailChange}\r\n      passwordInputChange={handlePasswordChange}\r\n      emailOutput={props.email}\r\n      passwordOutput={props.password}\r\n      onSubmit={onHandleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.appReducer.email,\r\n  password: state.appReducer.password,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeEmail: (value) => dispatch(changeEmail(value)),\r\n    changePassword: (value) => dispatch(changePassword(value)),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(LoginContainerRedux)\r\n);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  center: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"25%\",\r\n    backgroundColor: \"#FF5353\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport useStyles from \"./style\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SuccessRedux = ({ email, password }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.center}>\r\n      <p>\r\n        Hi, your email: {email}, your password: {password}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nSuccessRedux.propTypes = {\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n};\r\n\r\nexport default SuccessRedux;\r\n","import SeccessRedux from \"../views/SuccessRedux\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SuccessReduxContainer = ({ email, password }) => (\r\n  <SeccessRedux email={email} password={password} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.appReducer.email,\r\n  password: state.appReducer.password,\r\n});\r\n\r\nSuccessReduxContainer.propTypes = {\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SuccessReduxContainer);\r\n","import React from 'react'\r\nimport Navbar from '../Navbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Formik } from 'formik';\r\nimport useStyles from \"../Login/style\";\r\nimport { Field, Form } from 'redux-form';\r\nimport {  reduxForm  } from 'redux-form';\r\n\r\n\r\nlet LoginReduxForm = ({handleSubmit, emailValue, passwordValue}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <Navbar />\r\n     <Formik>\r\n         <Form \r\n         className = {classes.position}\r\n         onSubmit = {handleSubmit}\r\n        >\r\n           <Field fullwidth = 'true' \r\n            name = \"email\" \r\n             component = 'input' \r\n            type = \"email\"  \r\n            placeholder = \"Email\"\r\n            required/>\r\n           <Field fullwidth = 'true' \r\n            color = \"secondary\"\r\n            minLength = \"6\" \r\n            name = \"password\" \r\n            component = 'input'\r\n            type = \"password\"  \r\n            placeholder = \"Password\"\r\n            required/>\r\n                <Button fullWidth \r\n                  variant = \"contained\" \r\n                  color = \"primary\" \r\n                  type = \"submit\">\r\n                    Sign In\r\n                </Button>\r\n           <div>\r\n              <p>email: {JSON.stringify(emailValue)}</p>\r\n              <p>pwd: {JSON.stringify(passwordValue)}</p>\r\n           </div>\r\n         </Form>\r\n     </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginReduxForm)\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport LoginReduxForm from \"../views/LoginReduxForm\";\r\nimport { formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { changeEmail, changePassword } from \"../Redux/Action/index\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoginContainerReduxForm = (props) => {\r\n  const { changeEmail, changePassword } = props;\r\n\r\n  const submit = (formData) => {\r\n    changeEmail(formData.email);\r\n    changePassword(formData.password);\r\n    props.history.replace(\"/login-redux-form/success\");\r\n    return formData;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoginReduxForm\r\n        onSubmit={submit}\r\n        emailValue={props.email}\r\n        passwordValue={props.password}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst selector = formValueSelector(\"login\");\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeEmail: (value) => dispatch(changeEmail(value)),\r\n    changePassword: (value) => dispatch(changePassword(value)),\r\n  };\r\n};\r\n\r\nLoginReduxForm.propTypes = {\r\n  submit: PropTypes.func,\r\n  emailValue: PropTypes.string,\r\n  passwordValue: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(\r\n  connect((state) => {\r\n    const email = selector(state, \"email\");\r\n    const password = selector(state, \"password\");\r\n    return {\r\n      email,\r\n      password,\r\n    };\r\n  }, mapDispatchToProps)(LoginContainerReduxForm)\r\n);","import React from \"react\";\r\nimport useStyles from \"../SuccessRedux/style\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SuccessReduxForm = ({ emailValue, passwordValue }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.center}>\r\n      <p>\r\n        Hi, your email: {emailValue}, your password: {passwordValue}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nSuccessReduxForm.propTypes = {\r\n  emailValue: PropTypes.string,\r\n  passwordValue: PropTypes.string,\r\n};\r\n\r\nexport default SuccessReduxForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SuccessReduxForm from \"../views/SuccessReduxForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet LoginReduxFormSuccess = ({ emailValue, passwordValue }) => (\r\n  <SuccessReduxForm emailValue={emailValue} passwordValue={passwordValue} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  emailValue: state.appReducer.email,\r\n  passwordValue: state.appReducer.password,\r\n});\r\n\r\nLoginReduxFormSuccess.propTypes = {\r\n  emailValue: PropTypes.string,\r\n  passwordValue: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(LoginReduxFormSuccess);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  orintation: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  decorationList: {\r\n    listStyleType: \"none\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useStyles from \"./style\";\r\nimport Navbar from \"../Navbar\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CounterParent = ({\r\n  list,\r\n  handleCreateCounter,\r\n  handleRemoveCounter,\r\n  handleResetCounters,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className={classes.orintation}>\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleCreateCounter}\r\n          >\r\n            add counter\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleRemoveCounter}\r\n          >\r\n            delete counter\r\n          </Button>\r\n          <Button onClick={handleResetCounters}>Reset</Button>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n            <li className={classes.decorationList}>{list}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCounterParent.propTypes = {\r\n  list: PropTypes.array,\r\n  handleCreateCounter: PropTypes.func,\r\n  handleRemoveCounter: PropTypes.func,\r\n  handleResetCounters: PropTypes.func,\r\n};\r\n\r\nexport default CounterParent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  decorationCurrentValue: {\r\n    marginTop: \"20px\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useStyles from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Counter = ({ number, handleIncrement, handleDecrement, handleReset }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.decorationCurrentValue}>\r\n        {\"Current value: \" + number}\r\n      </div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleIncrement}>\r\n        increment\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleDecrement}>\r\n        decrement\r\n      </Button>\r\n      <Button onClick={handleReset}>Reset</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCounter.propTypes = {\r\n  number: PropTypes.number,\r\n  handleIncrement: PropTypes.func,\r\n  handleDecrement: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n};\r\n\r\nexport default Counter;\r\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Counter from \"../views/Counter\";\r\n\r\nconst CounterContainer = ({ count }) => {\r\n  const [number, setNumber] = useState(0);\r\n\r\n  const prevCount = useRef(count);\r\n\r\n  useEffect(() => {\r\n    count > prevCount.current ? handleEvenNumber() : handleOddNumber();\r\n  }, [count]);\r\n\r\n  const handleIncrement = () => {\r\n    setNumber(number + 1);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    setNumber(number - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setNumber(0);\r\n  };\r\n\r\n  const handleEvenNumber = () => {\r\n    if (number % 2 === 0) handleIncrement();\r\n  };\r\n\r\n  const handleOddNumber = () => {\r\n    if (number % 2 !== 0) handleDecrement();\r\n  };\r\n\r\n  const memorize = useMemo(\r\n    () => (\r\n      <Counter\r\n        handleIncrement={handleIncrement}\r\n        handleDecrement={handleDecrement}\r\n        handleReset={handleReset}\r\n        number={number}\r\n      />\r\n    ),\r\n    [number]\r\n  );\r\n\r\n  return memorize;\r\n};\r\n\r\nCounterContainer.propTypes = {\r\n  count: PropTypes.number,\r\n  number: PropTypes.number,\r\n  handleIncrement: PropTypes.func,\r\n  handleDecrement: PropTypes.func,\r\n  handleReset: PropTypes.func,\r\n};\r\n\r\nexport default CounterContainer;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CounterParent from \"../views/CounterParent\";\r\nimport CounterContainer from \"./CounterContainer\";\r\n\r\nconst CounterContainerParent = () => {\r\n  const [count, setCount] = useState(1);\r\n\r\n  const handleResetCounters = () => {\r\n    setCount(1);\r\n  };\r\n\r\n  const handleCreateCounter = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const handleRemoveCounter = () => {\r\n    if (count > 1) setCount(count - 1)\r\n  };\r\n\r\n  const list = [];\r\n  for (let i = 0; i < count; i++) {\r\n    list.push(<CounterContainer count={count} key={i} />);\r\n  }\r\n\r\n  return (\r\n    <CounterParent\r\n      list={list}\r\n      handleCreateCounter={handleCreateCounter}\r\n      handleRemoveCounter={handleRemoveCounter}\r\n      handleResetCounters={handleResetCounters}\r\n    />\r\n  );\r\n};\r\n\r\nCounterContainerParent.propTypes = {\r\n  list: PropTypes.array,\r\n  handleCreateCounter: PropTypes.func,\r\n  handleRemoveCounter: PropTypes.func,\r\n  handleResetCounters: PropTypes.func,\r\n};\r\n\r\nexport default CounterContainerParent;","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Navbar from \"./views/Navbar\";\nimport About from \"./views/About\";\nimport MistakeOnClient from \"./views/MistakeOnClient\";\nimport LoginContainer from \"./containers/LoginContainer\";\nimport LoginContainerRedux from \"./containers/LoginContainerRedux\";\nimport SuccessReduxContainer from \"./containers/SuccessReduxContainer\";\nimport LoginContainerReduxForm from \"./containers/LoginContainerReduxForm\";\nimport LoginReduxFormSuccess from \"./containers/LoginReduxFormSuccess\";\nimport CounterContainerParent from \"./containers/CounterContainerParent\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Navbar />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/counter\">\n          <CounterContainerParent />\n        </Route>\n        <Route path=\"/404\">\n          <MistakeOnClient />\n        </Route>\n        <Route path=\"/login\">\n          <LoginContainer />\n        </Route>\n        <Route exact path=\"/login-redux\">\n          <LoginContainerRedux />\n        </Route>\n        <Route path=\"/login-redux/success\">\n          <SuccessReduxContainer />\n        </Route>\n        <Route exact path=\"/login-redux-form\">\n          <LoginContainerReduxForm />\n        </Route>\n        <Route path=\"/login-redux-form/success\">\n          <LoginReduxFormSuccess />\n        </Route>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { handleActions } from \"redux-actions\";\r\nimport { changeEmail, changePassword } from \"../Action\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst appReducer = handleActions(\r\n  {\r\n    [changeEmail]: (state, action) => ({\r\n      ...state,\r\n      email: action.payload,\r\n    }),\r\n    [changePassword]: (state, action) => ({\r\n      ...state,\r\n      password: action.payload,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default appReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { combineReducers, createStore } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport { Provider } from \"react-redux\";\nimport appReducer from \"./Redux/Reducer\";\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  appReducer: appReducer,\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}