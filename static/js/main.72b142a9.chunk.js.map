{"version":3,"sources":["views/Counter/index.js","containers/CounterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","currentValue","Button","variant","color","onClick","handleIncrement","handleDecrement","changeDisplayFormStatus","CheckCounterContainer","state","bind","this","setState","React","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAwBeA,EAnBC,SAACC,GACb,OACY,gCACI,8BAAM,iBAAmBA,EAAMC,eAC/B,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASL,EAAMM,gBAA3D,uBAGA,cAACJ,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAASL,EAAMO,gBAA7D,uBAGA,cAACL,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAASL,EAAMQ,wBAA3C,uBCVdC,E,kDACF,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACXT,aAAc,GAEhB,EAAKK,gBAAkB,EAAKA,gBAAgBK,KAArB,gBACvB,EAAKJ,gBAAkB,EAAKA,gBAAgBI,KAArB,gBACvB,EAAKH,wBAA0B,EAAKA,wBAAwBG,KAA7B,gBAPhB,E,mDAUjB,WACEC,KAAKC,SAAS,CACZZ,aAAcW,KAAKF,MAAMT,aAAe,M,6BAI5C,WACEW,KAAKC,SAAS,CACZZ,aAAcW,KAAKF,MAAMT,aAAe,M,qCAI5C,WACEW,KAAKC,SAAS,CACVZ,aAAc,M,oBAIpB,WACE,OACE,cAAC,EAAD,CACEK,gBAAiBM,KAAKN,gBACtBC,gBAAiBK,KAAKL,gBACtBC,wBAAyBI,KAAKJ,wBAC9BP,aAAcW,KAAKF,MAAMT,mB,GAnCDa,IAAMC,WAyC1CN,EAAsBO,aAAe,CAACf,aAAc,GAUrCQ,QC/CAQ,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72b142a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Counter = (props) => {\r\n    return (\r\n                <div>\r\n                    <div>{\"Current value \" + props.currentValue}</div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={props.handleIncrement}>\r\n                    increment\r\n                    </Button> \r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={props.handleDecrement}>\r\n                    decrement\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={props.changeDisplayFormStatus}>\r\n                    reset\r\n                    </Button>\r\n                    \r\n                </div>\r\n            )\r\n}\r\n\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\nimport Counter from '../views/Counter';\r\nimport  PropTypes  from 'prop-types';\r\n\r\n\r\nclass CheckCounterContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          currentValue: 0,\r\n        };\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n        this.handleDecrement = this.handleDecrement.bind(this);\r\n        this.changeDisplayFormStatus = this.changeDisplayFormStatus.bind(this);\r\n    }\r\n\r\n      handleIncrement() {\r\n        this.setState({\r\n          currentValue: this.state.currentValue + 1,\r\n        });\r\n      }\r\n    \r\n      handleDecrement() {\r\n        this.setState({\r\n          currentValue: this.state.currentValue - 1,\r\n        });\r\n      }\r\n    \r\n      changeDisplayFormStatus() {\r\n        this.setState({\r\n            currentValue: 0\r\n        });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <Counter\r\n            handleIncrement={this.handleIncrement}\r\n            handleDecrement={this.handleDecrement}\r\n            changeDisplayFormStatus={this.changeDisplayFormStatus}\r\n            currentValue={this.state.currentValue}\r\n            \r\n          />\r\n        );\r\n      }\r\n}\r\nCheckCounterContainer.defaultProps = {currentValue: 0}\r\n\r\nCheckCounterContainer.propTypes = {\r\n    handleIncrement: PropTypes.func,\r\n    handleDecrement: PropTypes.func,\r\n    changeDisplayFormStatus: PropTypes.func,\r\n    currentValue: PropTypes.number\r\n}\r\n\r\n\r\nexport default CheckCounterContainer;","import './App.css';\nimport CheckCounterContainer from './containers/CounterContainer';\n\nfunction App() {\n  return (\n    <CheckCounterContainer />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}